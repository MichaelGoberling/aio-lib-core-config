const fs=require("fs"),path=require("path"),status=Symbol.for(`aio-cli-config.dotenv`),debug=require("debug")("aio-cli-config"),parse=a=>{const b=new RegExp(/^\s*(.*)=\s*'((''|[^'])*)'/,"gm"),c=new RegExp(/^\s*(.*)=\s*"((""|[^"])*)"/,"gm"),d=new RegExp(/^\s*(.*)=\s*([^'"].*)$/,"gm");let e,f={};const g=fs.readFileSync(a,"utf-8");for(;e=b.exec(g);)f[e[1]]=e[2].replace(/''/g,"'");for(;e=c.exec(g);)f[e[1]]=e[2].replace(/""/g,"\"");for(;e=d.exec(g);)f[e[1]]=e[2].replace(/ #.*$/,"").trim();return f},diff=(a,b)=>Object.keys(a).filter(a=>!(a in b));module.exports=function(){const a=path.join(process.cwd(),".env");if(!global[status])try{const b=parse(a),c=diff(b,process.env).sort();debug(`loading environment variables from ${a}`),0<c.length?(process.env={...b,...process.env},debug(`added environment variables: ${c.join(", ")}`)):debug(`no environment variables added`)}catch(b){"ENOENT"===b.code?debug(`.env file not found, skipping ...`):(debug(`cannot read environment variables from ${a}`),debug(` - ${b}`),debug("skipping ..."))}global[status]=!0};